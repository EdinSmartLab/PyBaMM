name: PyBaMM

on: push

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        python-version: [3.6]

    env:
      LD_LIBRARY_PATH: '/Users/runner/.local/lib'
      DYLD_LIBRARY_PATH: '/Users/runner/.local/lib'

    steps:
    - uses: actions/checkout@v2
    - name: Print environment variables
      run: |
        echo "############################"
        echo $LD_LIBRARY_PATH
        echo $DYLD_LIBRARY_PATH
        echo "############################"

    - name: Add echo statement to .bashrc
      run: |
        echo "echo BONJOUR" >> /Users/runner/.bashrc
        echo "export a=\"blah\"" >> ~/.bashrc
        tail /Users/runner/.bashrc
        source /Users/runner/.bashrc
        echo $a
        echo "::set-env name=LD_LIBRARY_PATH::$a/.local/lib:$LD_LIBRARY_PATH"


    - name: Print variable a
      run: |
        echo "#########"
        echo $a
        echo ${{ env.LD_LIBRARY_PATH }}
        echo "#########"
        tail /Users/runner/.bashrc

    # - name: Debugging with tmate
    #   uses: mxschmitt/action-tmate@v2

    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v1
    #   with:
    #     python-version: ${{ matrix.python-version }}

    # - name: Install MacOS system dependencies
    #   if: matrix.os == 'macos-latest'
    #   run: |
    #     brew update
    #     brew install graphviz
    #     brew install openblas suitesparse

    # - name: Install SUNDIALS and SuiteSparse
    #   if: matrix.os != 'windows-latest'
    #   run: |
    #     pip install wget
    #     python scripts/setup_KLU_module_build.py
    #     rm -rf pybind11;
    #     git clone https://github.com/pybind/pybind11.git;

    # - name: Install standard PyBaMM package
    #   run: |
    #     pip install --upgrade pip
    #     pip install wheel
    #     pip install -e .

    # - name: Install optional scikits.odes package
    #   if: matrix.os != 'windows-latest'
    #   run: |
    #     pybamm_install_odes
    #     echo "echo BONJOUR" >> /Users/runner/.bashrc
    #     source $HOME/.bashrc
    #     echo "############################"
    #     echo $LD_LIBRARY_PATH
    #     echo $DYLD_LIBRARY_PATH
    #     echo "############################"

    # - name: Run unit tests for scikits solvers
    #   env:
    #     LD_LIBRARY_PATH: '/Users/runner/.local/lib'
    #   run: |
    #     echo "############################"
    #     tail /Users/runner/.bashrc
    #     echo $LD_LIBRARY_PATH
    #     echo $DYLD_LIBRARY_PATH
    #     echo "############################"
    #     python -m unittest tests/unit/test_solvers/test_scikits_solvers.py
